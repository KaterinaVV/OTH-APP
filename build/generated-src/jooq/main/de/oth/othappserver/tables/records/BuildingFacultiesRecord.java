/*
 * This file is generated by jOOQ.
 */
package de.oth.othappserver.tables.records;


import de.oth.othappserver.tables.BuildingFaculties;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BuildingFacultiesRecord extends UpdatableRecordImpl<BuildingFacultiesRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.building_faculties.building</code>.
     */
    public BuildingFacultiesRecord setBuilding(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.building_faculties.building</code>.
     */
    public Integer getBuilding() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.building_faculties.faculty</code>.
     */
    public BuildingFacultiesRecord setFaculty(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.building_faculties.faculty</code>.
     */
    public Integer getFaculty() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return BuildingFaculties.BUILDING_FACULTIES.BUILDING;
    }

    @Override
    public Field<Integer> field2() {
        return BuildingFaculties.BUILDING_FACULTIES.FACULTY;
    }

    @Override
    public Integer component1() {
        return getBuilding();
    }

    @Override
    public Integer component2() {
        return getFaculty();
    }

    @Override
    public Integer value1() {
        return getBuilding();
    }

    @Override
    public Integer value2() {
        return getFaculty();
    }

    @Override
    public BuildingFacultiesRecord value1(Integer value) {
        setBuilding(value);
        return this;
    }

    @Override
    public BuildingFacultiesRecord value2(Integer value) {
        setFaculty(value);
        return this;
    }

    @Override
    public BuildingFacultiesRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BuildingFacultiesRecord
     */
    public BuildingFacultiesRecord() {
        super(BuildingFaculties.BUILDING_FACULTIES);
    }

    /**
     * Create a detached, initialised BuildingFacultiesRecord
     */
    public BuildingFacultiesRecord(Integer building, Integer faculty) {
        super(BuildingFaculties.BUILDING_FACULTIES);

        setBuilding(building);
        setFaculty(faculty);
    }
}
