/*
 * This file is generated by jOOQ.
 */
package de.oth.othappserver.tables.records;


import de.oth.othappserver.tables.Feed;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedRecord extends UpdatableRecordImpl<FeedRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.feed.id</code>.
     */
    public FeedRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.feed.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.feed.rss</code>.
     */
    public FeedRecord setRss(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.feed.rss</code>.
     */
    public String getRss() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.feed.faculty</code>.
     */
    public FeedRecord setFaculty(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.feed.faculty</code>.
     */
    public Integer getFaculty() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Feed.FEED.ID;
    }

    @Override
    public Field<String> field2() {
        return Feed.FEED.RSS;
    }

    @Override
    public Field<Integer> field3() {
        return Feed.FEED.FACULTY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRss();
    }

    @Override
    public Integer component3() {
        return getFaculty();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRss();
    }

    @Override
    public Integer value3() {
        return getFaculty();
    }

    @Override
    public FeedRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public FeedRecord value2(String value) {
        setRss(value);
        return this;
    }

    @Override
    public FeedRecord value3(Integer value) {
        setFaculty(value);
        return this;
    }

    @Override
    public FeedRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedRecord
     */
    public FeedRecord() {
        super(Feed.FEED);
    }

    /**
     * Create a detached, initialised FeedRecord
     */
    public FeedRecord(Integer id, String rss, Integer faculty) {
        super(Feed.FEED);

        setId(id);
        setRss(rss);
        setFaculty(faculty);
    }
}
