/*
 * This file is generated by jOOQ.
 */
package de.oth.othappserver.tables.records;


import de.oth.othappserver.tables.ElectionCandidate;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ElectionCandidateRecord extends UpdatableRecordImpl<ElectionCandidateRecord> implements Record3<Integer, JSON, byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.election_candidate.id</code>.
     */
    public ElectionCandidateRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.election_candidate.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.election_candidate.info</code>.
     */
    public ElectionCandidateRecord setInfo(JSON value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.election_candidate.info</code>.
     */
    public JSON getInfo() {
        return (JSON) get(1);
    }

    /**
     * Setter for <code>public.election_candidate.image</code>.
     */
    public ElectionCandidateRecord setImage(byte[] value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.election_candidate.image</code>.
     */
    public byte[] getImage() {
        return (byte[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, JSON, byte[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, JSON, byte[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ElectionCandidate.ELECTION_CANDIDATE.ID;
    }

    @Override
    public Field<JSON> field2() {
        return ElectionCandidate.ELECTION_CANDIDATE.INFO;
    }

    @Override
    public Field<byte[]> field3() {
        return ElectionCandidate.ELECTION_CANDIDATE.IMAGE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public JSON component2() {
        return getInfo();
    }

    @Override
    public byte[] component3() {
        return getImage();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public JSON value2() {
        return getInfo();
    }

    @Override
    public byte[] value3() {
        return getImage();
    }

    @Override
    public ElectionCandidateRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ElectionCandidateRecord value2(JSON value) {
        setInfo(value);
        return this;
    }

    @Override
    public ElectionCandidateRecord value3(byte[] value) {
        setImage(value);
        return this;
    }

    @Override
    public ElectionCandidateRecord values(Integer value1, JSON value2, byte[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ElectionCandidateRecord
     */
    public ElectionCandidateRecord() {
        super(ElectionCandidate.ELECTION_CANDIDATE);
    }

    /**
     * Create a detached, initialised ElectionCandidateRecord
     */
    public ElectionCandidateRecord(Integer id, JSON info, byte[] image) {
        super(ElectionCandidate.ELECTION_CANDIDATE);

        setId(id);
        setInfo(info);
        setImage(image);
    }
}
