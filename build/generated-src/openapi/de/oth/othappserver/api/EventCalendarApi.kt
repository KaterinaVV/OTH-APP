/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package de.oth.othappserver.api

import de.oth.othappserver.model.Category
import de.oth.othappserver.model.Error
import de.oth.othappserver.model.EventQueryResult
import de.oth.othappserver.model.Organizer
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import javax.validation.Valid
import javax.validation.constraints.DecimalMax
import javax.validation.constraints.DecimalMin
import javax.validation.constraints.Max
import javax.validation.constraints.Min
import javax.validation.constraints.NotNull
import javax.validation.constraints.Pattern
import javax.validation.constraints.Size

import kotlin.collections.List
import kotlin.collections.Map

@Validated
@RequestMapping("\${api.base-path:}")
interface EventCalendarApi {


    @GetMapping(
            value = ["/v1/eventcalendar/category"],
            produces = ["application/json"]
    )
    fun categories(): ResponseEntity<List<Category>> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }


    @GetMapping(
            value = ["/v1/eventcalendar/organizer"],
            produces = ["application/json"]
    )
    fun organizers(): ResponseEntity<List<Organizer>> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }


    @GetMapping(
            value = ["/v1/eventcalendar/event"],
            produces = ["application/json"]
    )
    fun queryEvents(@NotNull  @RequestParam(value = "minStartDate", required = true) minStartDate: kotlin.String
,@NotNull  @RequestParam(value = "maxStartDate", required = true) maxStartDate: kotlin.String
, @RequestParam(value = "deltaToken", required = false) deltaToken: kotlin.String?
, @RequestParam(value = "skipToken", required = false) skipToken: kotlin.String?
, @RequestParam(value = "paged", required = false, defaultValue="false") paged: kotlin.Boolean
): ResponseEntity<EventQueryResult> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
